name: DevSecOps para Frontend Móviles

on: 
  push: 
    branches: 
      - DevSecOps
  pull_request: 
    branches: 
      - DevSecOps

jobs: 
  seguridad_gitleaks: 
    name: Seguridad con Gitleaks
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Instalar Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/latest/download/gitleaks-linux-amd64 -o gitleaks
          chmod +x gitleaks
          sudo mv gitleaks /usr/local/bin/

      - name: Ejecutar Gitleaks para detectar credenciales
        run: gitleaks detect --verbose --redact --source . || true

  analisis_codigo_sonarqube: 
    name: Análisis de Código con SonarCloud
    runs-on: ubuntu-latest
    needs: seguridad_gitleaks
    steps: 
      - name: Checkout del código
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: Setup Java (Necesario para SonarCloud)
        uses: actions/setup-java@v3
        with: 
          distribution: 'temurin'
          java-version: '17'

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env: 
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

  analisis_mobsf: 
    name: Análisis Dinámico con MobSF
    runs-on: ubuntu-latest
    needs: analisis_codigo_sonarqube
    steps: 
      - name: Checkout del código en DevSecOps
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          ref: DevSecOps  # Extrae el código desde DevSecOps

      - name: Instalar Flutter
        uses: subosito/flutter-action@v2
        with: 
          flutter-version: '3.27.3'
          channel: 'stable'

      - name: Instalar dependencias de Flutter
        run: flutter pub get

      - name: Generar APK en modo release
        run: flutter build apk --release

  build_apk_main: 
    name: Generar y Subir APK a main
    runs-on: ubuntu-latest
    needs: analisis_mobsf
    steps: 
      - name: Checkout del código en DevSecOps
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          ref: DevSecOps  # Extrae el código desde DevSecOps

      - name: Configurar usuario de GitHub Actions
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Cambiar a la rama main y fusionar DevSecOps
        run: |
          git fetch origin main
          git checkout main
          git merge --no-ff DevSecOps -m "Merge DevSecOps into main para producción"
          git push origin main

      - name: Instalar Flutter
        uses: subosito/flutter-action@v2
        with: 
          flutter-version: '3.27.3'
          channel: 'stable'

      - name: Instalar dependencias de Flutter
        run: flutter pub get

      - name: Generar APK en modo release
        run: flutter build apk --release

      - name: Mover APK a la raíz del repositorio
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk app-release.apk
          git add app-release.apk
          git commit -m "Generado APK de producción"
          git push origin main --force  # Solo sube el APK, sin tocar código adicional

      - name: Subir APK como artefacto en GitHub Actions
        uses: actions/upload-artifact@v4
        with: 
          name: APK de Producción
          path: app-release.apk
